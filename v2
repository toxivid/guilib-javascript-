(function () {
  if (window.createWindow) return;

  function makeDraggable(el) {
    let isDown = false, offset = [0, 0];
    el.addEventListener('mousedown', function (e) {
      const tag = e.target.tagName.toLowerCase();
      if (
        e.target.className === "nodrag" ||
        tag === "input" || tag === "textarea" || tag === "select"
      ) return;

      isDown = true;
      offset = [el.offsetLeft - e.clientX, el.offsetTop - e.clientY];
      el.style.cursor = 'grabbing';
    });

    document.addEventListener('mouseup', () => {
      isDown = false;
      el.style.cursor = 'default';
    });

    document.addEventListener('mousemove', function (e) {
      if (isDown) {
        e.preventDefault();
        el.style.left = (e.clientX + offset[0]) + 'px';
        el.style.top = (e.clientY + offset[1]) + 'px';
      }
    });
  }

  window.createWindow = function (name, draggable = true) {
    const win = document.createElement("div");
    Object.assign(win.style, {
      position: "fixed",
      top: "50%",
      left: "50%",
      transform: "translate(-50%, -50%)",
      background: "#1e1e1e",
      color: "white",
      padding: "0",
      borderRadius: "12px",
      boxShadow: "0 0 20px rgba(0,0,0,0.7)",
      zIndex: "9999",
      fontFamily: "sans-serif",
      width: "400px",
      minHeight: "300px",
      overflow: "hidden"
    });

    const titleBar = document.createElement("div");
    titleBar.textContent = name;
    titleBar.className = "nodrag";
    Object.assign(titleBar.style, {
      background: "#111",
      color: "white",
      fontSize: "18px",
      fontWeight: "bold",
      padding: "10px",
      textAlign: "center",
      borderBottom: "1px solid #333"
    });

    const close = document.createElement("div");
    close.textContent = "Ã—";
    close.className = "nodrag";
    Object.assign(close.style, {
      position: "absolute",
      top: "10px",
      right: "15px",
      cursor: "pointer",
      color: "#aaa",
      fontSize: "20px",
      fontWeight: "bold"
    });
    close.onmouseover = () => (close.style.color = "red");
    close.onmouseout = () => (close.style.color = "#aaa");
    close.onclick = () => win.remove();

    const tabBar = document.createElement("div");
    Object.assign(tabBar.style, {
      display: "flex",
      borderBottom: "1px solid #444",
      background: "#222"
    });

    const contentArea = document.createElement("div");
    Object.assign(contentArea.style, {
      padding: "15px"
    });

    win.appendChild(titleBar);
    win.appendChild(close);
    win.appendChild(tabBar);
    win.appendChild(contentArea);
    document.body.appendChild(win);

    if (draggable) makeDraggable(win);

    const tabs = [];

    win._addTab = function (name) {
      const tabButton = document.createElement("div");
      tabButton.textContent = name;
      Object.assign(tabButton.style, {
        padding: "10px",
        cursor: "pointer",
        background: "#222",
        borderRight: "1px solid #333",
        flex: "1",
        textAlign: "center"
      });

      const tabContent = document.createElement("div");
      tabContent.style.display = "none";
      contentArea.appendChild(tabContent);

      tabButton.onclick = () => {
        tabs.forEach(t => {
          t.button.style.background = "#222";
          t.content.style.display = "none";
        });
        tabButton.style.background = "#333";
        tabContent.style.display = "block";
      };

      tabBar.appendChild(tabButton);
      tabs.push({ button: tabButton, content: tabContent });

      if (tabs.length === 1) tabButton.click();

      return tabContent;
    };

    return win;
  };

  window.createTab = function (parent, name) {
    return parent._addTab(name);
  };

  window.createButton = function (parent, name, callback) {
    const btn = document.createElement("button");
    btn.textContent = name;
    Object.assign(btn.style, {
      display: "block",
      marginTop: "6px",
      padding: "6px 12px",
      background: "#333",
      color: "white",
      border: "none",
      borderRadius: "6px",
      cursor: "pointer",
      width: "100%",
      textAlign: "left"
    });
    btn.onmouseover = () => (btn.style.background = "#444");
    btn.onmouseout = () => (btn.style.background = "#333");
    btn.onclick = callback;
    parent.appendChild(btn);
    return btn;
  };

  window.createSlider = function (parent, name, min, max, callback) {
    const label = document.createElement("label");
    label.textContent = `${name}: `;
    label.style.display = "block";
    label.style.marginTop = "10px";
    label.style.marginBottom = "4px";

    const valueDisplay = document.createElement("span");
    valueDisplay.textContent = min;
    label.appendChild(valueDisplay);

    const slider = document.createElement("input");
    slider.type = "range";
    slider.min = min;
    slider.max = max;
    slider.value = min;
    slider.style.width = "100%";
    slider.style.marginBottom = "10px";

    slider.oninput = () => {
      valueDisplay.textContent = slider.value;
      if (callback) callback(Number(slider.value));
    };

    parent.appendChild(label);
    parent.appendChild(slider);
    return slider;
  };

  window.createCheckbox = function (parent, name, defaultValue, callback) {
    const container = document.createElement("label");
    container.style.display = "block";
    container.style.marginTop = "10px";
    container.style.cursor = "pointer";

    const checkbox = document.createElement("input");
    checkbox.type = "checkbox";
    checkbox.checked = defaultValue;
    checkbox.style.marginRight = "8px";

    checkbox.onchange = () => {
      if (callback) callback(checkbox.checked);
    };

    container.appendChild(checkbox);
    container.appendChild(document.createTextNode(name));
    parent.appendChild(container);
    return checkbox;
  };

  window.createLine = function (parent) {
    const spacer = document.createElement("div");
    spacer.style.height = "20px";
    parent.appendChild(spacer);
  };

  HTMLElement.prototype.AddButton = function (opts) {
    if (opts && typeof opts.Name === "string" && typeof opts.Callback === "function") {
      return createButton(this, opts.Name, opts.Callback);
    }
  };

  HTMLElement.prototype.AddSlider = function (opts) {
    if (
      opts &&
      typeof opts.Name === "string" &&
      typeof opts.Min === "number" &&
      typeof opts.Max === "number" &&
      typeof opts.Callback === "function"
    ) {
      return createSlider(this, opts.Name, opts.Min, opts.Max, opts.Callback);
    }
  };

  HTMLElement.prototype.AddCheckbox = function (opts) {
    if (
      opts &&
      typeof opts.Name === "string" &&
      typeof opts.Default === "boolean" &&
      typeof opts.Callback === "function"
    ) {
      return createCheckbox(this, opts.Name, opts.Default, opts.Callback);
    }
  };

  HTMLElement.prototype.AddLine = function () {
    return createLine(this);
  };

})();
