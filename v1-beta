(function () {
  if (window.createWindow) return;

  function makeDraggable(el) {
    let isDown = false, offset = [0, 0];

    el.addEventListener('mousedown', function (e) {
      if (e.target.className === "nodrag") return;
      isDown = true;
      offset = [el.offsetLeft - e.clientX, el.offsetTop - e.clientY];
      el.style.cursor = 'grabbing';
    });

    document.addEventListener('mouseup', () => {
      isDown = false;
      el.style.cursor = 'default';
    });

    document.addEventListener('mousemove', function (e) {
      e.preventDefault();
      if (isDown) {
        el.style.left = (e.clientX + offset[0]) + 'px';
        el.style.top = (e.clientY + offset[1]) + 'px';
      }
    });
  }

  window.createWindow = function (name, draggable = true) {
    const win = document.createElement("div");
    Object.assign(win.style, {
      position: "fixed",
      top: "50%",
      left: "50%",
      transform: "translate(-50%, -50%)",
      background: "#1e1e1e",
      color: "white",
      padding: "25px",
      borderRadius: "12px",
      boxShadow: "0 0 20px rgba(0,0,0,0.7)",
      zIndex: "9999",
      fontFamily: "sans-serif",
      width: "400px",
      minHeight: "250px",
    });

    const title = document.createElement("div");
    title.textContent = name;
    title.className = "nodrag";
    Object.assign(title.style, {
      fontSize: "20px",
      fontWeight: "bold",
      marginBottom: "10px",
      textAlign: "center",
    });

    const close = document.createElement("div");
    close.textContent = "Ã—";
    close.className = "nodrag";
    Object.assign(close.style, {
      position: "absolute",
      top: "10px",
      right: "15px",
      cursor: "pointer",
      color: "#aaa",
      fontSize: "20px",
      fontWeight: "bold",
    });
    close.onmouseover = () => (close.style.color = "red");
    close.onmouseout = () => (close.style.color = "#aaa");
    close.onclick = () => win.remove();

    win.appendChild(title);
    win.appendChild(close);
    document.body.appendChild(win);

    if (draggable) makeDraggable(win);
    return win;
  };

  window.createTab = function (parent, name) {
    const tab = document.createElement("div");
    Object.assign(tab.style, {
      marginTop: "20px",
      paddingTop: "10px",
      borderTop: "1px solid #333"
    });

    const tabTitle = document.createElement("div");
    tabTitle.textContent = name;
    Object.assign(tabTitle.style, {
      fontWeight: "bold",
      fontSize: "16px",
      marginBottom: "8px"
    });

    tab.appendChild(tabTitle);
    parent.appendChild(tab);
    return tab;
  };

  window.createButton = function (parent, name, callback) {
    const btn = document.createElement("button");
    btn.textContent = name;
    Object.assign(btn.style, {
      display: "block",
      marginTop: "6px",
      padding: "6px 12px",
      background: "#333",
      color: "white",
      border: "none",
      borderRadius: "6px",
      cursor: "pointer",
      width: "100%",
      textAlign: "left"
    });

    btn.onmouseover = () => (btn.style.background = "#444");
    btn.onmouseout = () => (btn.style.background = "#333");
    btn.onclick = callback;

    parent.appendChild(btn);
    return btn;
  };

  window.createSlider = function (parent, name, min, max, callback) {
    const label = document.createElement("label");
    label.textContent = `${name}: `;
    label.style.display = "block";
    label.style.marginTop = "10px";
    label.style.marginBottom = "4px";

    const valueDisplay = document.createElement("span");
    valueDisplay.textContent = min;
    label.appendChild(valueDisplay);

    const slider = document.createElement("input");
    slider.type = "range";
    slider.min = min;
    slider.max = max;
    slider.value = min;
    slider.style.width = "100%";
    slider.style.marginBottom = "10px";

    slider.oninput = () => {
      valueDisplay.textContent = slider.value;
      if (callback) callback(Number(slider.value));
    };

    parent.appendChild(label);
    parent.appendChild(slider);
    return slider;
  };

  window.createLine = function (parent) {
    const spacer = document.createElement("div");
    spacer.style.height = "20px";
    parent.appendChild(spacer);
  };
})();
